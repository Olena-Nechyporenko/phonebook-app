{"version":3,"file":"static/js/858.6e37b1bf.chunk.js","mappings":"wQACA,EAA6B,2BAA7B,EAAoE,0BAApE,EAA2G,2BAA3G,EAAoJ,4B,SCM9IA,EAAe,CACnBC,QAAS,WACTC,SAAU,WACVC,OAAQ,QACRC,KAAM,QAED,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAM9B,OACE,iBAAKC,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA8B,2BAC9B,kBACED,UAAWC,EACXC,KAAK,OACLC,SAXR,SAAwBC,GACtB,IAAMC,EAAcD,EAAIE,OAAOC,MAAMC,OACrCf,GAASgB,EAAAA,EAAAA,GAAUJ,GACpB,EASOE,MAAOZ,EACPe,KAAK,cAGRZ,IACC,SAAC,KAAD,CACEa,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,iBAAiB,UACjBC,aAAc7B,EACd8B,SAAS,MAKlB,C,cC9CD,EAA0B,8BAA1B,EAAgE,4BAAhE,EAAmG,2BAAnG,EAAqI,2BAArI,EAAyK,6BAAzK,EAA6M,2BAA7M,EAAuP,mCAAvP,EAA0S,oCAA1S,EAA8V,oC,8BCW/U,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACM5B,GAAWC,EAAAA,EAAAA,MAEX4B,GAAQ1B,EAAAA,EAAAA,IAAY2B,EAAAA,KAC1BC,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,IAEJ,IAAMiC,EAAkB,WACtBL,GAAcD,EACf,EAED,OACE,qBAASpB,UAAWC,EAApB,WACE,kBAAOD,UAAWC,EAAlB,UACE,gBAAID,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,WACE,SAAC,MAAD,CAAYD,UAAWC,KACvB,SAAC,KAAD,CAAM0B,GAAG,MAAM3B,UAAWC,EAA1B,SAAsC,qBAIxC,gBAAID,UAAWC,EAAf,WACE,SAAC,MAAD,CAAQD,UAAWC,KACnB,SAAC,KAAD,CAAM0B,GAAG,WAAW3B,UAAWC,EAA/B,SAA2C,0BAMjD,iBAAKD,UAAWC,EAAhB,UACGqB,IAAS,uBAAIA,KACd,iBAAKtB,UAAWC,EAAhB,WACE,SAACT,EAAD,KACA,mBACEQ,UAAWC,EACX2B,QAASF,EACTxB,KAAK,SAHP,SAIC,oBAIH,SAAC,KAAD,OAIDkB,IAAa,SAACS,EAAA,EAAD,CAAiBC,QAASJ,MAG7C,C","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/ContactsPage.module.css?3d45","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterWrap\":\"Filter_filterWrap__xOHoa\",\"inputWrap\":\"Filter_inputWrap__XEHXz\",\"filterText\":\"Filter_filterText__QGy-k\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { setFilter } from 'redux/contacts/slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst spinnerStyle = {\n  padding: '5px 65px',\n  position: 'absolute',\n  bottom: '-20px',\n  left: '60px',\n};\nexport function Filter() {\n  const dispatch = useDispatch();\n  const savedFilter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  function filterContacts(evt) {\n    const valueFilter = evt.target.value.trim();\n    dispatch(setFilter(valueFilter));\n  }\n  return (\n    <div className={css.filterWrap}>\n      <div className={css.inputWrap}>\n        <p className={css.filterText}>Find contacts by name</p>\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          onChange={filterContacts}\n          value={savedFilter}\n          name=\"filter\"\n        />\n      </div>\n      {isLoading && (\n        <ThreeDots\n          height=\"20\"\n          width=\"50\"\n          radius=\"10\"\n          color=\"#9B5CFF\"\n          wrapperClassName=\"spinner\"\n          wrapperStyle={spinnerStyle}\n          visible={true}\n        />\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ContactsPage_section__Hhir8\",\"aside\":\"ContactsPage_aside__NY2WC\",\"list\":\"ContactsPage_list__TU15l\",\"item\":\"ContactsPage_item__ZwDu2\",\"button\":\"ContactsPage_button__Nb6zs\",\"icon\":\"ContactsPage_icon__2-mJt\",\"contactsWrap\":\"ContactsPage_contactsWrap__uEBMj\",\"addContactBtn\":\"ContactsPage_addContactBtn__aN5GB\",\"filterWrapper\":\"ContactsPage_filterWrapper__eW924\"};","import { MdContacts } from 'react-icons/md';\nimport { FaStar } from 'react-icons/fa';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Filter } from 'components/Filter/Filter';\n// import { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError } from 'redux/contacts/selectors';\nimport css from './ContactsPage.module.css';\nimport { AddContactModal } from 'components/AddContactModal/AddContactModal';\nimport { Link, Outlet } from 'react-router-dom';\n\nexport default function ContactsPage() {\n  const [openModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  return (\n    <section className={css.section}>\n      <aside className={css.aside}>\n        <ul className={css.list}>\n          <li className={css.item}>\n            <MdContacts className={css.icon} />\n            <Link to=\"all\" className={css.button}>\n              All Contacts\n            </Link>\n          </li>\n          <li className={css.item}>\n            <FaStar className={css.icon} />\n            <Link to=\"favorite\" className={css.button}>\n              My Favorites\n            </Link>\n          </li>\n        </ul>\n      </aside>\n      <div className={css.contactsWrap}>\n        {error && <b>{error}</b>}\n        <div className={css.filterWrapper}>\n          <Filter />\n          <button\n            className={css.addContactBtn}\n            onClick={handleOpenModal}\n            type=\"button\"\n          >\n            Add contact\n          </button>\n        </div>\n        <Outlet />\n        {/* <ContactList /> */}\n      </div>\n\n      {openModal && <AddContactModal onClose={handleOpenModal} />}\n    </section>\n  );\n}\n"],"names":["spinnerStyle","padding","position","bottom","left","Filter","dispatch","useDispatch","savedFilter","useSelector","selectFilter","isLoading","selectIsLoading","className","css","type","onChange","evt","valueFilter","target","value","trim","setFilter","name","height","width","radius","color","wrapperClassName","wrapperStyle","visible","ContactsPage","useState","openModal","setOpenModal","error","selectError","useEffect","fetchContacts","handleOpenModal","to","onClick","AddContactModal","onClose"],"sourceRoot":""}