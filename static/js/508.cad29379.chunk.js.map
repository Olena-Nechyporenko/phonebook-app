{"version":3,"file":"static/js/508.cad29379.chunk.js","mappings":"wQAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,aAAaC,SAASC,KAAhC,EACtBC,EAAuB,SAAAJ,GAAK,OACvCA,EAAMC,aAAaC,SAASG,cADW,EAE5BC,EAAkB,SAAAN,GAAK,OAAIA,EAAMC,aAAaC,SAASK,SAAhC,EACvBC,EAAc,SAAAR,GAAK,OAAIA,EAAMC,aAAaC,SAASO,KAAhC,EACnBC,EAAe,SAAAV,GAAK,OAAIA,EAAMC,aAAaU,MAAvB,EAEpBC,GAAyBC,EAAAA,EAAAA,IACpC,CAACH,EAAcX,IACf,SAACe,EAAaX,GACZ,IAAMY,EAAmBD,EAAYE,cACrC,OAAOb,EAAMQ,QAAO,qBAAGM,KAChBD,cAAcE,SAASH,EADV,GAGrB,ICfH,EAA6B,2BAA7B,EAAoE,0BAApE,EAA2G,2BAA3G,EAAoJ,4B,SCM9II,EAAe,CACnBC,QAAS,WACTC,SAAU,WACVC,OAAQ,QACRC,KAAM,QAED,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXZ,GAAca,EAAAA,EAAAA,IAAYjB,GAC1BH,GAAYoB,EAAAA,EAAAA,IAAYrB,GAM9B,OACE,iBAAKsB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA8B,2BAC9B,kBACED,UAAWC,EACXC,KAAK,OACLC,SAXR,SAAwBC,GACtB,IAAMC,EAAcD,EAAIE,OAAOC,MAAMC,OACrCX,GAASY,EAAAA,EAAAA,GAAUJ,GACpB,EASOE,MAAOrB,EACPG,KAAK,cAGRV,IACC,SAAC,KAAD,CACE+B,OAAO,KACPC,MAAM,KACNC,OAAO,KACPC,MAAM,UACNC,iBAAiB,UACjBC,aAAcxB,EACdyB,SAAS,MAKlB,C,wBC9CD,GAAgB,UAAY,+BAA+B,YAAc,iCAAiC,YAAc,iCAAiC,aAAe,kCAAkC,MAAQ,2BAA2B,UAAY,+BAA+B,eAAiB,oCAAoC,eAAiB,oCAAoC,WAAa,gCAAgC,SAAW,8BAA8B,SAAW,8BAA8B,UAAY,+BAA+B,WAAa,gCAAgC,YAAc,iCAAiC,SAAW,8BAA8B,QAAU,6BAA6B,SAAW,+B,iDCAnuB,EAAkC,qCAAlC,EAAyH,0BAAzH,EAA+J,+BAA/J,EAA0M,+BAA1M,EAAmP,6BAAnP,EAAwR,2BCUlRC,EAAgB,CAAE5B,KAAM,GAAI6B,MAAO,GAAIC,MAAO,IAC9CC,EAASC,EAAAA,KAAaC,MAAM,CAChCjC,KAAMgC,EAAAA,KACHE,IAAI,EAAG,sCACPC,IAAI,GAAI,2CACXL,MAAOE,EAAAA,KAAaI,QARH,mCAQuB,wBAAwBC,WAChER,MAAOG,EAAAA,KAAaK,WAAWC,UAAU,oCAG9BC,EAAc,WACzB,IAAM/B,GAAWC,EAAAA,EAAAA,MACXxB,GAAWyB,EAAAA,EAAAA,IAAY5B,GAuB7B,OACE,gBAAK6B,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEgB,cAAeA,EACfY,iBAAkBT,EAClBU,SA1Be,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACT1D,EAAS2D,MAC5B,qBAAG5C,KAAgBD,gBAAkB2C,EAAO1C,KAAKD,aAAjD,IAGA8C,IAAAA,OAAAA,QAAA,UAA2BH,EAAO1C,KAAlC,4BAAkE,CAChEI,SAAU,WACV0C,SAAU,UAIdtC,GACEuC,EAAAA,EAAAA,IAAW,CACT/C,KAAM0C,EAAO1C,KACb6B,MAAOa,EAAOb,MAAMmB,WACpBlB,MAAOY,EAAOZ,SAGlBa,IACD,EAIG,UAKE,UAAC,KAAD,CAAMhC,UAAWC,EAAUqC,aAAa,MAAxC,WACE,mBAAOtC,UAAWC,EAAesC,QAAQ,OAAzC,UAAgD,QAE9C,SAAC,KAAD,CAAOvC,UAAWC,EAAeC,KAAK,OAAOb,KAAK,OAAOqC,UAAQ,KACjE,iBAAM1B,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcZ,KAAK,eAGvB,mBAAOW,UAAWC,EAAesC,QAAQ,QAAzC,UAAiD,UAE/C,SAAC,KAAD,CACEvC,UAAWC,EACXC,KAAK,SACLb,KAAK,QACLmD,YAAY,aACZd,UAAQ,KAEV,iBAAM1B,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcZ,KAAK,gBAGvB,mBAAOW,UAAWC,EAAesC,QAAQ,QAAzC,UAAiD,SAE/C,SAAC,KAAD,CACEvC,UAAWC,EACXC,KAAK,OACLb,KAAK,QACLmD,YAAY,oBACZd,UAAQ,KAEV,iBAAM1B,UAAWC,EAAjB,UACE,SAAC,KAAD,CAAcZ,KAAK,gBAGvB,mBAAQW,UAAWC,EAAaC,KAAK,SAArC,SAA8C,sBAOvD,EC5FD,EAA2B,kCAA3B,EAA8E,wCAA9E,EAAiI,kCAAjI,EAA+K,mCAA/K,EAAiO,sCAAjO,EAA+Q,+BAA/Q,EAA4T,qCCKrT,SAASuC,EAAT,GAAuC,IAAZC,EAAW,EAAXA,SAChCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAuB,SAAAC,GACb,WAAVA,EAAEC,KACJJ,GAEH,EAGD,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACF,IAOJ,OACE,gBAAK1C,UAAWC,EAAciD,QANF,SAAAL,GACxBA,EAAEvC,SAAWuC,EAAEM,eACjBT,GAEH,EAEC,UACE,iBAAK1C,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAcC,KAAK,SAAtC,UACE,SAAC,MAAD,CAAWF,UAAWC,EAAeiD,QAASR,OAEhD,iBAAK1C,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAyB,iBACzB,SAAC,MAAD,CAAcD,UAAWC,QAG3B,SAAC2B,EAAD,QAIP,C,ICvCD,EAA2B,mCAA3B,EAA+E,yCAA/E,EAAmI,mCAAnI,EAAkL,oCAAlL,EAAqO,uCAArO,GAAoR,gCAApR,GAAkU,sCCAlU,GAAkC,yCAAlC,GAAiI,8BAAjI,GAA2K,mCAA3K,GAA0N,mCAA1N,GAAuQ,iCAAvQ,GAAgT,+BCU1SX,GAAgB,CAAE5B,KAAM,GAAI6B,MAAO,GAAIC,MAAO,IAC9CC,GAASC,EAAAA,KAAaC,MAAM,CAChCjC,KAAMgC,EAAAA,KACHE,IAAI,EAAG,sCACPC,IAAI,GAAI,2CACXL,MAAOE,EAAAA,KAAaI,QARH,mCAQuB,wBAAwBC,WAChER,MAAOG,EAAAA,KAAaK,WAAWC,UAAU,oCAG9ByB,GAAkB,WAC7B,IAAMvD,GAAWC,EAAAA,EAAAA,MACXxB,GAAWyB,EAAAA,EAAAA,IAAY5B,GACvBM,GAAiBsB,EAAAA,EAAAA,IAAYvB,GACnC6E,QAAQC,IAAI7E,GAuBZ,OACE,gBAAKuB,UAAWC,GAAhB,UACE,SAAC,KAAD,CACEgB,cAAeA,GACfY,iBAAkBT,GAClBU,SA1Be,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACT1D,EAAS2D,MAC5B,qBAAG5C,KAAgBD,gBAAkB2C,EAAO1C,KAAKD,aAAjD,IAGA8C,IAAAA,OAAAA,QAAA,UAA2BH,EAAO1C,KAAlC,4BAAkE,CAChEI,SAAU,WACV0C,SAAU,UAIdtC,GACEuC,EAAAA,EAAAA,IAAW,CACT/C,KAAM0C,EAAO1C,KACb6B,MAAOa,EAAOb,MAAMmB,WACpBlB,MAAOY,EAAOZ,SAGlBa,IACD,EAIG,UAKE,UAAC,KAAD,CAAMhC,UAAWC,GAAUqC,aAAa,MAAxC,WACE,mBAAOtC,UAAWC,GAAesC,QAAQ,OAAzC,UAAgD,QAE9C,SAAC,KAAD,CAAOvC,UAAWC,GAAeC,KAAK,OAAOb,KAAK,OAAOqC,UAAQ,KACjE,iBAAM1B,UAAWC,GAAjB,UACE,SAAC,KAAD,CAAcZ,KAAK,eAGvB,mBAAOW,UAAWC,GAAesC,QAAQ,QAAzC,UAAiD,UAE/C,SAAC,KAAD,CACEvC,UAAWC,GACXC,KAAK,SACLb,KAAK,QACLmD,YAAY,aACZd,UAAQ,KAEV,iBAAM1B,UAAWC,GAAjB,UACE,SAAC,KAAD,CAAcZ,KAAK,gBAGvB,mBAAOW,UAAWC,GAAesC,QAAQ,QAAzC,UAAiD,SAE/C,SAAC,KAAD,CACEvC,UAAWC,GACXC,KAAK,OACLb,KAAK,QACLmD,YAAY,oBACZd,UAAQ,KAEV,iBAAM1B,UAAWC,GAAjB,UACE,SAAC,KAAD,CAAcZ,KAAK,gBAGvB,mBAAQW,UAAWC,GAAaC,KAAK,SAArC,SAA8C,sBAOvD,ECzFM,SAASqD,GAAT,GAAmD,IAAvBb,EAAsB,EAAtBA,QAAsB,EAAbc,WAC1Cb,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAuB,SAAAC,GACb,WAAVA,EAAEC,KACJJ,GAEH,EAGD,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACF,IAOJ,OACE,gBAAK1C,UAAWC,EAAciD,QANF,SAAAL,GACxBA,EAAEvC,SAAWuC,EAAEM,eACjBT,GAEH,EAEC,UACE,iBAAK1C,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAcC,KAAK,SAAtC,UACE,SAAC,MAAD,CAAWF,UAAWC,EAAeiD,QAASR,OAEhD,iBAAK1C,UAAWC,EAAhB,WACE,cAAGD,UAAWC,GAAd,SAAyB,kBACzB,SAAC,MAAD,CAAcD,UAAWC,SAG3B,SAACmD,GAAD,QAIP,CC3BM,SAASK,KACd,OAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACMC,GAAmBhE,EAAAA,EAAAA,IAAYf,GAC/BV,GAAWyB,EAAAA,EAAAA,IAAY5B,GACvB0B,GAAWC,EAAAA,EAAAA,MAMXkE,EAAqB,WACzBJ,GAAmBD,EACpB,EACKM,EAAsB,SAAAC,GAC1BJ,GAAoBD,GACpBhE,GAASsE,EAAAA,EAAAA,IAAeD,GACzB,EAED,OACE,gCACuB,IAApB5F,EAAS8F,QACR,4BACE,cAAGpE,UAAWC,EAAAA,UAAd,SAA6B,+CAG7B,mBACEiD,QAASc,EACThE,UAAWC,EAAAA,gBACXC,KAAK,SAHP,SAIC,0BAKH,eAAIF,UAAWC,EAAAA,YAAf,SACG8D,EAAiBM,KAAI,gBAAGC,EAAH,EAAGA,IAAKjF,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MAArB,OACpB,gBAAInB,UAAWC,EAAAA,YAAf,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,gBAAKD,UAAWC,EAAAA,MAAWsE,I,s8HAAUC,IAAKnF,KAC1C,eAAGW,UAAWC,EAAAA,WAAd,UAA+BZ,EAAK,WAGtC,gBAAIW,UAAWC,EAAAA,UAAf,WACE,gBAAID,UAAWC,EAAAA,eAAf,UAAmC,SAEjC,cAAGD,UAAWC,EAAAA,WAAd,SAA+BiB,QAEjC,gBAAIlB,UAAWC,EAAAA,eAAf,UAAmC,SAEjC,cAAGD,UAAWC,EAAAA,WAAd,SAA+BkB,WAInC,gBAAInB,UAAWC,EAAAA,SAAf,WACE,eAAID,UAAWC,EAAAA,SAAf,UACE,mBACED,UAAWC,EAAAA,QACXiD,QAAS,kBAAMe,EAAoBK,EAA1B,EACTjF,KAAK,OACLa,KAAK,SAJP,UAME,SAAC,MAAD,CAAUF,UAAWC,EAAAA,gBAGzB,eAAID,UAAWC,EAAAA,SAAf,UACE,mBACED,UAAWC,EAAAA,YACXZ,KAAK,WACLa,KAAK,SAHP,UAKE,SAAC,MAAD,CAAQF,UAAWC,EAAAA,gBAGvB,eAAID,UAAWC,EAAAA,SAAf,UACE,mBACED,UAAWC,EAAAA,UACXiD,QAAS,kBAtECgB,EAsEyBI,OArEnDzE,GAAS4E,EAAAA,EAAAA,IAAcP,IADG,IAAAA,CAsED,EACT7E,KAAK,SACLa,KAAK,SAJP,UAME,SAAC,MAAD,CAAUF,UAAWC,EAAAA,oBAI1B4D,IACC,SAACN,GAAD,CACEC,UAAWc,EACX5B,QAASuB,MAnDsBK,EADjB,MA2DzBX,IAAkB,SAAClB,EAAD,CAAiBC,QAASsB,MAGlD,CC9GD,OAA0B,8BAA1B,GAAgE,4BAAhE,GAAmG,2BAAnG,GAAqI,2BAArI,GAAyK,6BAAzK,GAA6M,2BAA7M,GAAuP,mCAAvP,GAA0S,oCAA1S,GAA8V,oCCU/U,SAASU,KACtB,OAAkChB,EAAAA,EAAAA,WAAS,GAA3C,eAAOiB,EAAP,KAAkBC,EAAlB,KACM/E,GAAWC,EAAAA,EAAAA,MAEXjB,GAAQkB,EAAAA,EAAAA,IAAYnB,IAC1B+D,EAAAA,EAAAA,YAAU,WACR9C,GAASgF,EAAAA,EAAAA,MACV,GAAE,CAAChF,IAEJ,IAAMiF,EAAkB,WACtBF,GAAcD,EACf,EAED,OACE,qBAAS3E,UAAWC,GAApB,WACE,kBAAOD,UAAWC,GAAlB,UACE,gBAAID,UAAWC,GAAf,WACE,gBAAID,UAAWC,GAAf,WACE,SAAC,MAAD,CAAYD,UAAWC,MACvB,mBAAQC,KAAK,SAASF,UAAWC,GAAjC,SAA6C,qBAI/C,gBAAID,UAAWC,GAAf,WACE,SAAC,MAAD,CAAQD,UAAWC,MACnB,mBAAQC,KAAK,SAASF,UAAWC,GAAjC,SAA6C,0BAMnD,iBAAKD,UAAWC,GAAhB,UACGpB,IAAS,uBAAIA,KACd,iBAAKmB,UAAWC,GAAhB,WACE,SAACL,EAAD,KACA,mBACEI,UAAWC,GACXiD,QAAS4B,EACT5E,KAAK,SAHP,SAIC,oBAKH,SAACuD,GAAD,OAGDkB,IAAa,SAAClC,EAAD,CAAiBC,QAASoC,MAG7C,C","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/AddContactModal/AddContactModal.module.css?f26e","components/AddContactModal/AddContactModal.jsx","webpack://react-homework-template/./src/components/EditContactModal/EditContactModal.module.css?937c","webpack://react-homework-template/./src/components/EditContactForm/EditContactForm.module.css?43d2","components/EditContactForm/EditContactForm.jsx","components/EditContactModal/EditContactModal.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/ContactsPage.module.css?3d45","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactsBook.contacts.items;\nexport const selectCurrentContact = state =>\n  state.contactsBook.contacts.currentContact;\nexport const selectIsLoading = state => state.contactsBook.contacts.isLoading;\nexport const selectError = state => state.contactsBook.contacts.error;\nexport const selectFilter = state => state.contactsBook.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectFilter, selectContacts],\n  (savedFilter, items) => {\n    const normalizedFilter = savedFilter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrap\":\"Filter_filterWrap__xOHoa\",\"inputWrap\":\"Filter_inputWrap__XEHXz\",\"filterText\":\"Filter_filterText__QGy-k\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { setFilter } from 'redux/contacts/slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst spinnerStyle = {\n  padding: '5px 65px',\n  position: 'absolute',\n  bottom: '-20px',\n  left: '60px',\n};\nexport function Filter() {\n  const dispatch = useDispatch();\n  const savedFilter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  function filterContacts(evt) {\n    const valueFilter = evt.target.value.trim();\n    dispatch(setFilter(valueFilter));\n  }\n  return (\n    <div className={css.filterWrap}>\n      <div className={css.inputWrap}>\n        <p className={css.filterText}>Find contacts by name</p>\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          onChange={filterContacts}\n          value={savedFilter}\n          name=\"filter\"\n        />\n      </div>\n      {isLoading && (\n        <ThreeDots\n          height=\"20\"\n          width=\"50\"\n          radius=\"10\"\n          color=\"#9B5CFF\"\n          wrapperClassName=\"spinner\"\n          wrapperStyle={spinnerStyle}\n          visible={true}\n        />\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"noContact\":\"ContactList_noContact__7t3Lb\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"imgNameWrapp\":\"ContactList_imgNameWrapp__z9g2l\",\"image\":\"ContactList_image__W7K+k\",\"descrList\":\"ContactList_descrList__lfROM\",\"descrEmailItem\":\"ContactList_descrEmailItem__PQKyJ\",\"descrPhoneItem\":\"ContactList_descrPhoneItem__hLAD6\",\"desription\":\"ContactList_desription__yMVNW\",\"iconList\":\"ContactList_iconList__dIPbk\",\"iconItem\":\"ContactList_iconItem__Zlbww\",\"deleteBtn\":\"ContactList_deleteBtn__1dg25\",\"deleteIcon\":\"ContactList_deleteIcon__-gWLm\",\"favoriteBtn\":\"ContactList_favoriteBtn__UO5If\",\"starIcon\":\"ContactList_starIcon__R41RU\",\"editBtn\":\"ContactList_editBtn__3eiID\",\"editIcon\":\"ContactList_editIcon__SgDt8\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactFormWrap\":\"ContactForm_contactFormWrap__JSni7\",\"formTitle\":\"ContactForm_formTitle__N6O4g\",\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\",\"error\":\"ContactForm_error__C1smZ\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport * as Yup from 'yup';\nimport css from './ContactForm.module.css';\n\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.(com|net|ua)$/i;\n\n// init.values and schema for Formik\nconst initialValues = { name: '', phone: '', email: '' };\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Must be at least 2 characters long')\n    .max(70, 'Must be no more than 70 characters long'),\n  email: Yup.string().matches(emailRegex, 'Invalid email format').required(),\n  phone: Yup.number().required().typeError('field can only contain numbers'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isInContacts = contacts.find(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (isInContacts) {\n      Notiflix.Notify.failure(`${values.name} is already in contacts!`, {\n        position: 'left-top',\n        distance: '10px',\n      });\n      return;\n    }\n    dispatch(\n      addContact({\n        name: values.name,\n        phone: values.phone.toString(),\n        email: values.email,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <div className={css.contactFormWrap}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.formLabel} htmlFor=\"name\">\n            Name\n            <Field className={css.formInput} type=\"text\" name=\"name\" required />\n            <span className={css.error}>\n              <ErrorMessage name=\"name\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"phone\">\n            Number\n            <Field\n              className={css.formInput}\n              type=\"number\"\n              name=\"phone\"\n              placeholder=\"097XXXXXXX\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"phone\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"email\">\n            Email\n            <Field\n              className={css.formInput}\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"example@gmail.com\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"email\" />\n            </span>\n          </label>\n          <button className={css.formBtn} type=\"submit\">\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"AddContactModal_backdrop__uwnUh\",\"modalContainer\":\"AddContactModal_modalContainer__h8IdI\",\"closeBtn\":\"AddContactModal_closeBtn__TEd7F\",\"closeIcon\":\"AddContactModal_closeIcon__wRjW2\",\"titleWrapper\":\"AddContactModal_titleWrapper__s2Nrq\",\"title\":\"AddContactModal_title__kwcio\",\"iconContact\":\"AddContactModal_iconContact__Pk5Sx\"};","import { IoMdClose } from 'react-icons/io';\nimport { IoIosContact } from 'react-icons/io';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport css from './AddContactModal.module.css';\nimport { useEffect } from 'react';\n\nexport function AddContactModal({ onClose }) {\n  useEffect(() => {\n    const handleCloseOnKeydown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleCloseOnKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseOnKeydown);\n    };\n  }, [onClose]);\n\n  const handleCloseOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n  return (\n    <div className={css.backdrop} onClick={handleCloseOnBackdrop}>\n      <div className={css.modalContainer}>\n        <button className={css.closeBtn} type=\"button\">\n          <IoMdClose className={css.closeIcon} onClick={onClose} />\n        </button>\n        <div className={css.titleWrapper}>\n          <p className={css.title}>New contact</p>\n          <IoIosContact className={css.iconContact} />\n        </div>\n\n        <ContactForm />\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"EditContactModal_backdrop__hDxVO\",\"modalContainer\":\"EditContactModal_modalContainer__SHk7g\",\"closeBtn\":\"EditContactModal_closeBtn__BD-VO\",\"closeIcon\":\"EditContactModal_closeIcon__nO1Z6\",\"titleWrapper\":\"EditContactModal_titleWrapper__ag1Cq\",\"title\":\"EditContactModal_title__gL+Fo\",\"iconContact\":\"EditContactModal_iconContact__BDszo\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactFormWrap\":\"EditContactForm_contactFormWrap__mPCxV\",\"formTitle\":\"EditContactForm_formTitle__wwgrz\",\"form\":\"EditContactForm_form__L+B1Z\",\"formLabel\":\"EditContactForm_formLabel__FRN2L\",\"formInput\":\"EditContactForm_formInput__-jl2O\",\"formBtn\":\"EditContactForm_formBtn__MrRS-\",\"error\":\"EditContactForm_error__aprXT\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectCurrentContact } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport * as Yup from 'yup';\nimport css from './EditContactForm.module.css';\n\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.(com|net|ua)$/i;\n\n// init.values and schema for Formik\nconst initialValues = { name: '', phone: '', email: '' };\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Must be at least 2 characters long')\n    .max(70, 'Must be no more than 70 characters long'),\n  email: Yup.string().matches(emailRegex, 'Invalid email format').required(),\n  phone: Yup.number().required().typeError('field can only contain numbers'),\n});\n\nexport const EditContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const currentContact = useSelector(selectCurrentContact);\n  console.log(currentContact);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isInContacts = contacts.find(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (isInContacts) {\n      Notiflix.Notify.failure(`${values.name} is already in contacts!`, {\n        position: 'left-top',\n        distance: '10px',\n      });\n      return;\n    }\n    dispatch(\n      addContact({\n        name: values.name,\n        phone: values.phone.toString(),\n        email: values.email,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <div className={css.contactFormWrap}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.formLabel} htmlFor=\"name\">\n            Name\n            <Field className={css.formInput} type=\"text\" name=\"name\" required />\n            <span className={css.error}>\n              <ErrorMessage name=\"name\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"phone\">\n            Number\n            <Field\n              className={css.formInput}\n              type=\"number\"\n              name=\"phone\"\n              placeholder=\"097XXXXXXX\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"phone\" />\n            </span>\n          </label>\n          <label className={css.formLabel} htmlFor=\"email\">\n            Email\n            <Field\n              className={css.formInput}\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"example@gmail.com\"\n              required\n            />\n            <span className={css.error}>\n              <ErrorMessage name=\"email\" />\n            </span>\n          </label>\n          <button className={css.formBtn} type=\"submit\">\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { IoMdClose } from 'react-icons/io';\nimport { IoIosContact } from 'react-icons/io';\nimport css from './EditContactModal.module.css';\nimport { useEffect } from 'react';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\n\nexport function EditContactModal({ onClose, contactId }) {\n  useEffect(() => {\n    const handleCloseOnKeydown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleCloseOnKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseOnKeydown);\n    };\n  }, [onClose]);\n\n  const handleCloseOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n  return (\n    <div className={css.backdrop} onClick={handleCloseOnBackdrop}>\n      <div className={css.modalContainer}>\n        <button className={css.closeBtn} type=\"button\">\n          <IoMdClose className={css.closeIcon} onClick={onClose} />\n        </button>\n        <div className={css.titleWrapper}>\n          <p className={css.title}>Edit contact</p>\n          <IoIosContact className={css.iconContact} />\n        </div>\n\n        <EditContactForm />\n      </div>\n    </div>\n  );\n}\n","import { MdDelete } from 'react-icons/md';\nimport { FaStar } from 'react-icons/fa';\nimport { SlPencil } from 'react-icons/sl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, getContactById } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport { useState } from 'react';\nimport { AddContactModal } from 'components/AddContactModal/AddContactModal';\nimport img from './contact.jpg';\nimport { EditContactModal } from 'components/EditContactModal/EditContactModal';\n\nexport function ContactList() {\n  const [isOpenAddModal, setIsOpenAddModal] = useState(false);\n  const [isOpenEditModal, setIsOpenEditModal] = useState(false);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleOpenAddModal = () => {\n    setIsOpenAddModal(!isOpenAddModal);\n  };\n  const handleOpenEditModal = id => {\n    setIsOpenEditModal(!isOpenEditModal);\n    dispatch(getContactById(id));\n  };\n\n  return (\n    <>\n      {contacts.length === 0 ? (\n        <div>\n          <p className={css.noContact}>\n            You have no contacts in the phonebook yet\n          </p>\n          <button\n            onClick={handleOpenAddModal}\n            className={css.addFirstContact}\n            type=\"button\"\n          >\n            Add first contact\n          </button>\n        </div>\n      ) : (\n        <ul className={css.contactList}>\n          {filteredContacts.map(({ _id, name, phone, email }) => (\n            <li className={css.contactItem} key={_id}>\n              <div className={css.imgNameWrapp}>\n                <img className={css.image} src={img} alt={name} />\n                <p className={css.desription}>{name} </p>\n              </div>\n\n              <ul className={css.descrList}>\n                <li className={css.descrPhoneItem}>\n                  Phone\n                  <p className={css.desription}>{phone}</p>\n                </li>\n                <li className={css.descrEmailItem}>\n                  Email\n                  <p className={css.desription}>{email}</p>\n                </li>\n              </ul>\n\n              <ul className={css.iconList}>\n                <li className={css.iconItem}>\n                  <button\n                    className={css.editBtn}\n                    onClick={() => handleOpenEditModal(_id)}\n                    name=\"edit\"\n                    type=\"button\"\n                  >\n                    <SlPencil className={css.editIcon} />\n                  </button>\n                </li>\n                <li className={css.iconItem}>\n                  <button\n                    className={css.favoriteBtn}\n                    name=\"favorite\"\n                    type=\"button\"\n                  >\n                    <FaStar className={css.starIcon} />\n                  </button>\n                </li>\n                <li className={css.iconItem}>\n                  <button\n                    className={css.deleteBtn}\n                    onClick={() => handleDeleteContact(_id)}\n                    name=\"delete\"\n                    type=\"button\"\n                  >\n                    <MdDelete className={css.deleteIcon} />\n                  </button>\n                </li>\n              </ul>\n              {isOpenEditModal && (\n                <EditContactModal\n                  contactId={_id}\n                  onClose={handleOpenEditModal}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      {isOpenAddModal && <AddContactModal onClose={handleOpenAddModal} />}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ContactsPage_section__Hhir8\",\"aside\":\"ContactsPage_aside__NY2WC\",\"list\":\"ContactsPage_list__TU15l\",\"item\":\"ContactsPage_item__ZwDu2\",\"button\":\"ContactsPage_button__Nb6zs\",\"icon\":\"ContactsPage_icon__2-mJt\",\"contactsWrap\":\"ContactsPage_contactsWrap__uEBMj\",\"addContactBtn\":\"ContactsPage_addContactBtn__aN5GB\",\"filterWrapper\":\"ContactsPage_filterWrapper__eW924\"};","import { MdContacts } from 'react-icons/md';\nimport { FaStar } from 'react-icons/fa';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError } from 'redux/contacts/selectors';\nimport css from './ContactsPage.module.css';\nimport { AddContactModal } from 'components/AddContactModal/AddContactModal';\n\nexport default function ContactsPage() {\n  const [openModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  return (\n    <section className={css.section}>\n      <aside className={css.aside}>\n        <ul className={css.list}>\n          <li className={css.item}>\n            <MdContacts className={css.icon} />\n            <button type=\"button\" className={css.button}>\n              All Contacts\n            </button>\n          </li>\n          <li className={css.item}>\n            <FaStar className={css.icon} />\n            <button type=\"button\" className={css.button}>\n              My Favorites\n            </button>\n          </li>\n        </ul>\n      </aside>\n      <div className={css.contactsWrap}>\n        {error && <b>{error}</b>}\n        <div className={css.filterWrapper}>\n          <Filter />\n          <button\n            className={css.addContactBtn}\n            onClick={handleOpenModal}\n            type=\"button\"\n          >\n            Add contact\n          </button>\n        </div>\n\n        <ContactList />\n      </div>\n\n      {openModal && <AddContactModal onClose={handleOpenModal} />}\n    </section>\n  );\n}\n"],"names":["selectContacts","state","contactsBook","contacts","items","selectCurrentContact","currentContact","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","savedFilter","normalizedFilter","toLowerCase","name","includes","spinnerStyle","padding","position","bottom","left","Filter","dispatch","useDispatch","useSelector","className","css","type","onChange","evt","valueFilter","target","value","trim","setFilter","height","width","radius","color","wrapperClassName","wrapperStyle","visible","initialValues","phone","email","schema","Yup","shape","min","max","matches","required","typeError","ContactForm","validationSchema","onSubmit","values","resetForm","find","Notiflix","distance","addContact","toString","autoComplete","htmlFor","placeholder","AddContactModal","onClose","useEffect","handleCloseOnKeydown","e","key","window","addEventListener","removeEventListener","onClick","currentTarget","EditContactForm","console","log","EditContactModal","contactId","ContactList","useState","isOpenAddModal","setIsOpenAddModal","isOpenEditModal","setIsOpenEditModal","filteredContacts","handleOpenAddModal","handleOpenEditModal","id","getContactById","length","map","_id","src","alt","deleteContact","ContactsPage","openModal","setOpenModal","fetchContacts","handleOpenModal"],"sourceRoot":""}